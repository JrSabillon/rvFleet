@using Newtonsoft.Json;
@model List<rvFleet.Models.GetVehicleAnualCostsGraphData_Result>
@{ 
    var JsonData = JsonConvert.SerializeObject(Model);
}

<canvas id="canvas-pie-chart-anualCosts" style="max-height: 700px"></canvas>

<script>
    var JsonArray = JSON.parse('@Html.Raw(JsonData)');
    var data = {
        datasets: [{
            data: [10, 20, 30]
        }],

        // These labels appear in the legend and in the tooltips when hovering different arcs
        labels: [
            'Red',
            'Yellow',
            'Blue'
        ]
    };

    function loadAnualCostsPie() {
        var graphData = [];
        var labels = [];
        var formatedNumber = [];
        var backgroundColors = [];
        var totalAmount = 0;

        $.each(JsonArray, function (index, item) {
            labels.push(item.NombreRubro);
            graphData.push(item.FacValorFactura);
            totalAmount += item.FacValorFactura;
            formatedNumber.push(item.FormatedNumber);
            backgroundColors.push(item.ColorIdentificador);
        });

        data.datasets[0] = {
            data: graphData,
            backgroundColor: backgroundColors,
            fnumber: formatedNumber
        };
        data.labels = labels;

        const config = {
            type: 'pie',
            data: data,
            options: {
                layout: {
                    padding: {
                        bottom: 20
                    }
                },
                responsive: true,
                plugins: {
                    tooltip: {
                        callbacks: {
                            label: function (t) {
                                return `${t.label} ${t.dataset.fnumber[t.dataIndex]}`;
                            }
                        }
                    },
                    datalabels: {
                        formatter: (value, context) => {
                            if ((context.dataset.data[context.dataIndex] / totalAmount * 100).toFixed(2) > 1)
                                return (context.dataset.data[context.dataIndex] / totalAmount * 100).toFixed(1) + "%";

                            return "";
                        },
                        anchor: "end",
                        font: {
                            size: 17,
                            weight: "bold"
                        }
                    },
                    legend: {
                        labels: {
                            font: {
                                size: 14
                            }
                        }
                    }
                }
            },
            plugins: [ChartDataLabels]
            
        };

        var ctx = $('#canvas-pie-chart-anualCosts');
        var myChart = new Chart(ctx, config);
    };
</script>

@model List<rvFleet.Models.spGetVehicleCostsFiltered_Result>

@{
    var startDate = Convert.ToDateTime(ViewBag.startDate);
    var endDate = Convert.ToDateTime(ViewBag.endDate);
    var months = Model.Select(x => x.FacFechaOrden.ToString("yyyy-MMM", new System.Globalization.CultureInfo("es-HN"))).Distinct();
    var years = Model.Select(x => x.FacFechaOrden.ToString("yyyy")).Distinct();
    var proveedores = Model.Select(x => x.Nombre).Distinct();

    string FormatedDateToText(DateTime date)
    {
        return date.ToString("dd") + " de " + date.ToString("MMMM", new System.Globalization.CultureInfo("es")) + ", " + date.ToString("yyyy");
    }
}

<label>@FormatedDateToText(startDate) - @FormatedDateToText(endDate).</label>
<div class="mb-3">
    <div class="row">
        @Html.DropDownList("select-proveedor", new SelectList(proveedores), new { @class = "form-control col-12", multiple = "multiple", onchange = "filterTable();" })
    </div>
</div>
@foreach (var year in years)
{
    <div class="form-group">
        <div class="w-100" style="cursor: pointer;" data-toggle="collapse" data-target="#div-@year">
            <label class="h6"><i class="fa fa-chevron-down"></i> @year</label>
            <label class="float-right">@Model.Where(x => x.FacFechaOrden.ToString("yyyy") == year).Sum(x => x.CostoTotal).ToString("N2")</label>
            <hr />
        </div>
        <div class="table-responsive collapse show" id="div-@year">
            <table class="table table-hover table-bordered dynamic-table">
                <thead class="thead-light">
                    <tr>
                        <th>Vehículo</th>
                        @foreach (var mes in Model.Where(x => x.FacFechaOrden.ToString("yyyy") == year).Select(x => x.FacFechaOrden.ToString("MMM", new System.Globalization.CultureInfo("es-HN"))).Distinct())
                        {
                            <th>@mes</th>
                        }
                        <th>Total</th>
                        <th>Total general</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var proveedor in Model.Where(x => x.FacFechaOrden.ToString("yyyy") == year).Select(x => x.Nombre).Distinct())
                    {
                        <tr>
                            <td>@proveedor</td>
                            @foreach (var cost in Model.Where(x => x.FacFechaOrden.ToString("yyyy") == year && x.Nombre == proveedor))
                            {
                                <td>@cost.CostoTotal.ToString("N2")</td>
                            }
                            <td style="background-color: #efefef">
                                @Model.Where(x => x.FacFechaOrden.ToString("yyyy") == year && x.Nombre == proveedor).Sum(x => x.CostoTotal).ToString("N2")
                            </td>
                            <td style="background-color: #efefef">
                                @Model.Where(x => x.Nombre == proveedor).Sum(x => x.CostoTotal).ToString("N2")
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
}

<script type="text/javascript">
    $(function () {
        $('#select-proveedor').select2({
            theme: 'bootstrap4'
        });

        $('#data').val('@Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(Model))');
    });

    function filterTable() {
        var selectedProveedores = $('#select-proveedor').val();

        if (selectedProveedores == '') {
            $('.dynamic-table tbody tr').removeClass('d-none');
        } else {
            $('.dynamic-table tbody tr').each(function (index, item) {
                if (selectedProveedores.indexOf($(item).find('td').first().text()) > -1) {
                    $(item).removeClass('d-none');
                } else {
                    $(item).addClass('d-none');
                }
            });
        }
    }
</script>